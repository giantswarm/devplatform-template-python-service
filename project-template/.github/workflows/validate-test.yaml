name: Validate and test code

on:
  workflow_call: {}
  workflow_dispatch: {}

env:
  PRE_COMMIT_VERSION: "4.0.1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: 3.12
      - name: Install helm-docs
        run: curl -fsSL -o /tmp/hd.deb https://github.com/norwoodj/helm-docs/releases/download/v1.14.2/helm-docs_1.14.2_Linux_x86_64.deb && sudo dpkg -i /tmp/hd.deb && rm /tmp/hd.deb
      - name: Install pipx
        run: sudo apt-get install -y --no-install-recommends pipx
      _ name: Install pre-commit
        run: {{`pipx install pre-commit==${{ env.PRE_COMMIT_VERSION }}`}}
      - name: Cache pre-commit hooks
        id: cache-pre-commit-hooks
        uses: actions/cache@v4
        env:
          cache-name: pre-commit-hooks
        with:
          path: ~/.cache/pre-commit
          key: {{`${{ runner.os }}-pre-commit-${{ env.PRE_COMMIT_VERSION }}-hooks-${{ hashFiles('.pre-commit-config.yaml') }}`}}
      - if: {{`${{ steps.cache-pre-commit-hooks.outputs.cache-hit != 'true' }}`}}
        name: Install pre-commit hooks
        run: pre-commit install-hooks
      - name: Run pre-commit
        continue-on-error: true
        run: |
          pipx ensurepath
          pre-commit run --show-diff-on-failure --color=always --all-files
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: {{`venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}`}}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
