name: Trigger Root PR status check

on:
  pull_request:
    types: [closed]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  trigger-root-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Trigger root PR workflow
        uses: actions/github-script@v7
        with:
          script: |
            const subPrNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            // Search for the root PR that references the sub-PR
            const { data: issues } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${repoOwner}/${repoName} type:pr in:comments ${subPrNumber}`,
            });

            if (issues.items.length === 0) {
              console.log("Root PR not found");
              return;
            }

            console.log(issues.items[0])
            const rootPrNumber = issues.items[0].number;

            console.log(`Detected Root PR #${rootPrNumber}`);

            // Get the root PR details to fetch the head SHA
            const { data: rootPr } = await github.rest.pulls.get({
              owner: repoOwner,
              repo: repoName,
              pull_number: rootPrNumber,
            });

            const rootPrHeadSha = rootPr.head.sha;

            // Find the check run for Sub-PR Merged Status
            const { data: checkRuns } = await github.rest.checks.listForRef({
              owner: repoOwner,
              repo: repoName,
              ref: rootPrHeadSha,
              check_name: 'Sub-PR Merged Status'
            });

            // Exit if no check exists
            if (checkRuns.check_runs.length === 0) {
              console.log("No existing check found for the root PR, exiting");
              return;
            }

            const checkId = checkRuns.check_runs[0].id;
            console.log(`Found existing check with ID: ${checkId}`);

            const output = {
              title: 'Sub-PR Status',
              summary: 'The Sub-PR has been merged successfully!'
            };

            await github.rest.checks.update({
              owner: repoOwner,
              repo: repoName,
              check_run_id: checkId,
              status: 'completed',
              conclusion: 'success',
              output: output,
              completed_at: new Date().toISOString()
            });

            console.log(`Check updated for Root PR #${rootPrNumber}`);
