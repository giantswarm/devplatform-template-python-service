name: Block PR until Sub-PR is Merged

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  block-pr:
    runs-on: ubuntu-latest
    if: >-
      github.event_name != 'issue_comment' || 
      (github.event_name == 'issue_comment' && github.event.comment.body == '/check-sub-pr')
    steps:
      - name: Get PR number
        id: get_pr_number
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "PR_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Create Check Run
        id: create_check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            // Create a check run that will be updated at the end
            const { data: check } = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Sub-PR Merged Status',
              head_sha: (await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: process.env.PR_NUMBER
              })).data.head.sha,
              status: 'in_progress',
              started_at: new Date().toISOString()
            });

            core.setOutput('check_run_id', check.id);
            return check.id;

      - name: Check for Sub-PR Status
        id: check_sub_pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const isPullRequest = context.payload.pull_request !== undefined;
            const mainPrNumber = isPullRequest
              ? context.payload.pull_request.number
              : context.payload.issue.number;

            const commentPattern = /Pull request https:\/\/github\.com\/.*\/pull\/(\d+) was created to preview the result of this PR\./;
            const noChangeCommentPattern = /Your current PR doesn\'t make any change in the rendered project\. No PR was created\./;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: mainPrNumber,
            });

            const noChangeComment = comments.data.find(comment => noChangeCommentPattern.test(comment.body));
            if (noChangeComment) {
              console.log("No sub-PR is created for this PR, skipping the check");
              core.setOutput('status', 'no_changes');
              return 'no_changes';
            }
            const subPrComment = comments.data.find(comment => commentPattern.test(comment.body));
            if (!subPrComment) {
              console.log('No sub-PR comment found yet.');
              throw new Error(`Sub-PR comment not found in the current PR.`);
            }

            const subPrNumber = subPrComment.body.match(commentPattern)[1];
            console.log(`Sub-PR Number: ${subPrNumber}`);

            try {
              const subPr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: subPrNumber,
              });

              if (subPr.data.merged) {
                console.log(`Sub-PR #${subPrNumber} is merged.`);
                core.setOutput('status', 'merged');
                return 'merged';
              } else {
                console.log(`Sub-PR #${subPrNumber} is not merged.`);
                core.setOutput('status', 'not_merged');
                return 'not_merged';
              }
            } catch (error) {
              console.log(`Error fetching Sub-PR #${subPrNumber}: ${error}`);
              throw error;
            }

      - name: Update Check Run Status
        id: update_check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const checkRunId = ${{ steps.create_check.outputs.check_run_id }};
            const status = '${{ steps.check_sub_pr.outputs.status }}';

            console.log(`Check run ID: ${checkRunId}`);
            console.log(`Status: ${status}`);

            let conclusion = 'neutral';
            let output = {};

            if (status === 'merged') {
              conclusion = 'success';
              output = {
                title: 'Sub-PR Status',
                summary: 'The Sub-PR has been merged successfully!'
              };
            } else if (status === 'no_changes') {
              conclusion = 'success';
              output = {
                title: 'No Sub-PR Required',
                summary: 'This PR does not require a Sub-PR as it makes no changes to the rendered project.'
              };
            } else {
              conclusion = 'failure';
              output = {
                title: 'Sub-PR Status',
                summary: 'The Sub-PR has not been merged yet!'
              };
            }

            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRunId,
              status: 'completed',
              conclusion: conclusion,
              output: output,
              completed_at: new Date().toISOString()
            });

#      - name: Fail if Sub-PR is not merged
#        if: steps.check_sub_pr.outputs.status == 'not_merged'
#        run: |
#          echo "The sub-PR is not merged. Blocking the main PR."
#          exit 1
